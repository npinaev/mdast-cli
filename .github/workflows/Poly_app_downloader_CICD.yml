name: Full CI/CD Pipeline for Poly App downloader tool

on:
  push:
    branches:
      - main

jobs:
  build-n-publish-pypi:
    name: Build and publish Poly app downloader 🐍 distribution to PyPI
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
        .
    - name: Publish distribution 📦 to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_CLI_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Publish distribution 📦 to PyPI
      if: github.event_name == 'push'
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_CLI_TOKEN }}

  build-n-publish-docker:
    name: Docker Hub - Publish Poly app downloader image
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v3

      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run:
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag npinaev/poly_app_downloader:latest

      - name: Docker Hub push image
        run: docker push npinaev/poly_app_downloader

  run-integration-tests:
#    needs: build-n-publish-pypi
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest tests/integration_tests
        env:
          PYTHONPATH: "."

  run-system-tests:
#    needs: run-integration-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest_testconfig
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest tests/system_tests --tc-file=config/creds.ini
        env:
          PYTHONPATH: "."

